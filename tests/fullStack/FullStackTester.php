<?php //[STAMP] 6f70ddf5dcb3cdfd5e3c0984d84bb655

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile


use Codeception\Module\FullStackHelper;

/**
 * Inherited Methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void execute($callable)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
 * @method void comment($description)
 * @method void haveFriend($name)
*/
class FullStackTester extends \Codeception\Actor
{
   
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\FullStackHelper::getDbConf()
     */
    public function getDbConf() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getDbConf', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\FullStackHelper::wipeEntireDb()
     */
    public function wipeEntireDb() {
        return $this->scenario->runStep(new \Codeception\Step\Action('wipeEntireDb', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\FullStackHelper::seeExceptionThrown()
     */
    public function canSeeExceptionThrown($exceptionName, $function) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeExceptionThrown', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\FullStackHelper::seeExceptionThrown()
     */
    public function seeExceptionThrown($exceptionName, $function) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeExceptionThrown', func_get_args()));
    }
}
